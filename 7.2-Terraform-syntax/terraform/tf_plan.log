./tf_apply.sh

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of yandex-cloud/yandex from the dependency lock file
- Using previously-installed yandex-cloud/yandex v0.81.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
data.yandex_compute_image.nat-image: Reading...
data.yandex_compute_image.image-type: Reading...
data.yandex_client_config.client: Reading...
data.yandex_client_config.client: Read complete after 0s [id=3017047830]
data.yandex_compute_image.image-type: Read complete after 0s [id=fd8kdq6d0p8sij7h5qe3]
data.yandex_compute_image.nat-image: Read complete after 0s [id=fd8tim6r7u5dqa0q5pq5]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # yandex_compute_instance.vm will be created
  + resource "yandex_compute_instance" "vm" {
      + allow_stopping_for_update = true
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + hostname                  = "antonh2o.ru"
      + id                        = (known after apply)
      + metadata                  = {
          + "user-data" = <<-EOT
                #cloud-config
                users:
                  - name: ubuntu
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL']
                    ssh-authorized-keys:
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCr1sKGQTNZMeRnkfYWKNmHjsCgQ2+Jb7ZrxAbJj0JsfqIOVUgu2gBGT1x3W4AuEx7TkoLAcVLzAR0qVFsbxn8VXD4U/rmqSKgGdwzgvrzwKqhJYvxV+VpZx2rvBuy43Obcm+yVSpkGcGvahkmyG+NRSLp3tTJR78bHYvwlhQyULM6qRp8WDJx/U4Qxl1qRZ+J/rv2iQawkXyTvqOGIhedglL5dD153K+vy7R1dVBId86V80Tc4ByTwXozOj+c7E0UKtF76quIYXcGGPGmEpatLV8t/BbK3nkNUPe3jSrvf850ujMXjGhogg30UN/ByrG5nz8wMmONsJrFl6S/mBemBGYIzRxBJOzkEonw/AI+NDdj+KY5R37M4uXz8DqDW0JrxiylBRgVJW1JfhDyMRyGDb+VtOMJa7Fi2KT5+eWfdvkAOLbZxUFM3UHy7CrXiU1vnWlGkPsowM2PsM2/QTAS7ExJanSyn+XmJaTfIAFerTKrzzXxQ3L6qxnLbY7e3cP0= root@vm-acd4db49

                # ssh-keys = "centos:${file("~/.ssh/id_rsa.pub")}"
            EOT
        }
      + name                      = "vm"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd8tim6r7u5dqa0q5pq5"
              + name        = (known after apply)
              + size        = 10
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = (known after apply)
        }

      + placement_policy {
          + host_affinity_rules = (known after apply)
          + placement_group_id  = (known after apply)
        }

      + resources {
          + core_fraction = 5
          + cores         = 2
          + memory        = 2
        }

      + scheduling_policy {
          + preemptible = true
        }
    }

  # yandex_vpc_network.default will be created
  + resource "yandex_vpc_network" "default" {
      + created_at                = (known after apply)
      + default_security_group_id = (known after apply)
      + folder_id                 = (known after apply)
      + id                        = (known after apply)
      + labels                    = (known after apply)
      + name                      = "stage"
      + subnet_ids                = (known after apply)
    }

  # yandex_vpc_route_table.route-table will be created
  + resource "yandex_vpc_route_table" "route-table" {
      + created_at = (known after apply)
      + folder_id  = (known after apply)
      + id         = (known after apply)
      + labels     = (known after apply)
      + name       = "route-table"
      + network_id = (known after apply)
    }

  # yandex_vpc_subnet.default will be created
  + resource "yandex_vpc_subnet" "default" {
      + created_at     = (known after apply)
      + folder_id      = (known after apply)
      + id             = (known after apply)
      + labels         = (known after apply)
      + name           = "subnet"
      + network_id     = (known after apply)
      + v4_cidr_blocks = [
          + "192.168.101.0/24",
        ]
      + v6_cidr_blocks = (known after apply)
      + zone           = "ru-central1-a"
    }

Plan: 4 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cloud_id             = "b1gj0lmni877oia7jol4"
  + folder_id            = "b1gvlk8uc7e2jarkufhg"
  + vm                   = (known after apply)
  + yandex_compute_image = "fd8kdq6d0p8sij7h5qe3"
  + zone                 = "ru-central1-a"
yandex_vpc_network.default: Creating...
yandex_vpc_network.default: Creation complete after 1s [id=enp32vbbv11q72s3gm96]
yandex_vpc_route_table.route-table: Creating...
yandex_vpc_subnet.default: Creating...
yandex_vpc_subnet.default: Creation complete after 1s [id=e9b2juu7m7doibi2f73f]
yandex_compute_instance.vm: Creating...
yandex_vpc_route_table.route-table: Creation complete after 2s [id=enpeveuhhq41k3b20dr2]
yandex_compute_instance.vm: Still creating... [10s elapsed]
yandex_compute_instance.vm: Still creating... [20s elapsed]
yandex_compute_instance.vm: Creation complete after 30s [id=fhm6cfc3h770eps26bf8]

Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

Outputs:

cloud_id = "b1gj0lmni877oia7jol4"
folder_id = "b1gvlk8uc7e2jarkufhg"
vm = "192.168.101.27"
yandex_compute_image = "fd8kdq6d0p8sij7h5qe3"
zone = "ru-central1-a"
